import { useEffect, useState } from 'react';
import Head from 'next/head';

function readStoredProfile() {
  try {
    const a = localStorage.getItem('profile');
    if (a) return JSON.parse(a);
  } catch {}
  try {
    const b = sessionStorage.getItem('profile');
    if (b) return JSON.parse(b);
  } catch {}
  return null;
}

export default function HomePage() {
  const [p, setP] = useState(null);
  const [showSearch, setShowSearch] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');
  const [searchResults, setSearchResults] = useState([]);
  const [isSearching, setIsSearching] = useState(false);
  const [searchError, setSearchError] = useState(null);

  useEffect(() => {
    // –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª ‚Äî –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    if (sessionStorage.getItem('logged_out') === '1') {
      window.location.replace('/');
      return;
    }
    const cached = readStoredProfile();
    if (!cached) {
      // –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è ‚Äî –Ω–∞ —ç–∫—Ä–∞–Ω –ª–æ–≥–∏–Ω–∞
      window.location.replace('/');
      return;
    }
    setP(cached);
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ API
  async function handleSearch(query) {
    const trimmed = (query || '').replace(/^@/, '').trim();
    if (!trimmed) { 
      setSearchResults([]); 
      setSearchError(null);
      return; 
    }

    if (trimmed.length < 2) {
      setSearchResults([]);
      setSearchError('–ú–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞');
      return;
    }

    try {
      setIsSearching(true);
      setSearchError(null);
      
      const response = await fetch(`/api/searchUsers?q=${encodeURIComponent(trimmed)}`);
      const data = await response.json();
      
      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞');
      }

      setSearchResults(data.items || []);
    } catch (error) {
      setSearchError(error.message || '–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      setSearchResults([]);
    } finally {
      setIsSearching(false);
    }
  }

  // –ê–≤—Ç–æ–ø–æ–∏—Å–∫ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
  useEffect(() => {
    const timer = setTimeout(() => {
      if (searchQuery.trim()) {
        handleSearch(searchQuery);
      } else {
        setSearchResults([]);
        setSearchError(null);
      }
    }, 300);

    return () => clearTimeout(timer);
  }, [searchQuery]);

  // –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É –ø–æ–∏—Å–∫–∞
  function openSearch() {
    setShowSearch(true);
    setSearchQuery('');
    setSearchResults([]);
    setSearchError(null);
  }

  // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É –ø–æ–∏—Å–∫–∞
  function closeSearch() {
    setShowSearch(false);
    setSearchQuery('');
    setSearchResults([]);
    setSearchError(null);
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  function handleUserClick(user) {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Ñ–∏–ª—è –≤ Telegram –∏–ª–∏ –≤–Ω—É—Ç—Ä–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const telegramUrl = `https://t.me/${user.username}`;
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å –≤ Telegram, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
    if (window.Telegram?.WebApp) {
      window.Telegram.WebApp.openTelegramLink(telegramUrl);
    } else {
      // –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–µ–º –∞–ª–µ—Ä—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
      alert(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.name}\n@${user.username}\n\n–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å: ${telegramUrl}`);
    }
    
    closeSearch();
  }

  if (!p) {
    return (
      <div className="container">
        <div className="hero" style={{maxWidth:560, textAlign:'center'}}>–ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é‚Ä¶</div>
      </div>
    );
  }

  const name = [p.first_name, p.last_name].filter(Boolean).join(' ') || '–ì–æ—Å—Ç—å';
  const avatar = p.photo_url || '/placeholder.png';
  const at = p.username ? '@' + p.username : '';

  return (
    <>
      <Head><title>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Äî Spectra Market</title></Head>
      <div className="container">
        <div className="hero" style={{maxWidth:980}}>
          {/* top bar */}
          <div className="topbar">
            <div className="topbar-left">
              <img className="avatar" src={avatar} alt="avatar" />
              <div className="hello">
                <div className="hello-hi">–ü—Ä–∏–≤–µ—Ç, {name}</div>
                <div className="hello-sub">{at || '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!'}</div>
              </div>
            </div>
            <a className="btn btn-ghost" href="/profile" aria-label="–ü—Ä–æ—Ñ–∏–ª—å">
              –ü—Ä–æ—Ñ–∏–ª—å
            </a>
          </div>

          {/* grid tiles */}
          <div className="grid">
            {/* Auctions */}
            <a className="tile tile-auction" href="/auctions">
              <div className="tile-head">
                <div className="tile-title">–ê—É–∫—Ü–∏–æ–Ω—ã</div>
                <div className="tile-badge">Live</div>
              </div>
              <div className="tile-desc">
                –î–µ–ª–∞–π —Å—Ç–∞–≤–∫–∏ –Ω–∞ —Ä–µ–¥–∫–∏–µ –ø–æ–¥–∞—Ä–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
              </div>
            </a>

            {/* Gifts */}
            <a className="tile tile-gifts" href="/gifts">
              <div className="tile-head">
                <div className="tile-title">–ü–æ–¥–∞—Ä–∫–∏</div>
              </div>
              <div className="tile-desc">
                –ö–∞—Ç–∞–ª–æ–≥ –Ω–∞–±–æ—Ä–æ–≤ –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–π ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–π –¥—Ä—É–∑—å—è–º –≤ –æ–¥–∏–Ω —Ç–∞–ø.
              </div>
            </a>

            {/* Plans */}
            <a className="tile tile-plans" href="/plans">
              <div className="tile-head">
                <div className="tile-title">–¢–∞—Ä–∏—Ñ—ã</div>
              </div>
              <ul className="tile-list">
                <li>–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π ‚Äî —Å—Ç–∞—Ä—Ç—É–π –±–µ–∑ —Ä–∏—Å–∫–æ–≤</li>
                <li>Plus ‚Äî —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–∏—Ç—Ä–∏–Ω–∞</li>
                <li>Pro ‚Äî –º–∞–∫—Å–∏–º—É–º –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤</li>
              </ul>
            </a>

            {/* My purchases */}
            <a className="tile tile-orders" href="/orders">
              <div className="tile-head">
                <div className="tile-title">–ü–æ–∫—É–ø–∫–∏</div>
              </div>
              <div className="tile-desc">–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ –∏ —Å—Ç–∞—Ç—É—Å—ã –æ—Ç–ø—Ä–∞–≤–∫–∏.</div>
            </a>

            {/* Search People - –ó–ê–ú–ï–ù–ò–õ–ò "–°–æ–∑–¥–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫" */}
            <div className="tile tile-search" onClick={openSearch}>
              <div className="tile-head">
                <div className="tile-title">–ü–æ–∏—Å–∫ —á–µ–ª–æ–≤–µ–∫–∞</div>
                <div className="tile-badge">@</div>
              </div>
              <div className="tile-desc">–ù–∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ @–Ω–∏–∫–Ω–µ–π–º—É –∏ –æ—Ç–∫—Ä–æ–π –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å.</div>
            </div>
          </div>
        </div>
      </div>

      {/* Search Modal */}
      {showSearch && (
        <div className="search-overlay" onClick={(e) => e.target === e.currentTarget && closeSearch()}>
          <div className="search-modal">
            <div className="search-header">
              <h2 className="h1" style={{fontSize: '20px', margin: 0}}>–ü–æ–∏—Å–∫ —á–µ–ª–æ–≤–µ–∫–∞</h2>
              <button className="close-btn" onClick={closeSearch}>√ó</button>
            </div>

            <div className="search-row">
              <span className="at">@</span>
              <input
                className="input"
                placeholder="–≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                autoFocus
              />
            </div>

            {isSearching && (
              <div className="foot" style={{textAlign: 'center', marginTop: '16px'}}>
                üîç –ò—â–µ–º...
              </div>
            )}

            {searchError && (
              <div className="foot" style={{color:'#ffb4b4', marginTop: '16px'}}>
                ‚ö†Ô∏è {searchError}
              </div>
            )}

            {searchResults.length > 0 && (
              <div className="user-list">
                {searchResults.map(user => (
                  <div 
                    key={user.id} 
                    className="user-row" 
                    onClick={() => handleUserClick(user)}
                  >
                    <img src={user.avatar} alt="" />
                    <div className="user-meta">
                      <div className="user-name">
                        {user.name}
                        {user.verified && <span style={{color: 'var(--brand)', marginLeft: '4px'}}>‚úì</span>}
                      </div>
                      <div className="user-handle">@{user.username}</div>
                    </div>
                    <span className="user-open">–û—Ç–∫—Ä—ã—Ç—å</span>
                  </div>
                ))}
              </div>
            )}

            {!isSearching && !searchError && searchResults.length === 0 && searchQuery.trim() !== '' && searchQuery.trim().length >= 2 && (
              <div className="foot" style={{textAlign: 'center', marginTop: '16px'}}>
                üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É "@{searchQuery.replace(/^@/, '')}"
              </div>
            )}

            {searchQuery.trim() === '' && (
              <div className="foot" style={{textAlign: 'center', marginTop: '16px', opacity: 0.7}}>
                üí° –í–≤–µ–¥–∏—Ç–µ @–Ω–∏–∫–Ω–µ–π–º –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              </div>
            )}
          </div>
        </div>
      )}
    </>
  );
}