// –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–°–ù–û–í–ù–û–ì–û TELEGRAM API
export default async function handler(req, res) {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–°–ù–û–í–ù–û–ì–û API /api/auth/telegram-new');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –µ—Å–ª–∏ –±—ã –æ–Ω–∏ –ø—Ä–∏—à–ª–∏ –æ—Ç Telegram
  const fakeInitData = 'user=%7B%22id%22%3A123456789%2C%22first_name%22%3A%22Test%22%2C%22last_name%22%3A%22User%22%2C%22username%22%3A%22testuser%22%7D&chat_instance=-123456789&chat_type=private&auth_date=1705123456&hash=fake_hash_for_testing';

  try {
    // –ü—Ä—è–º–æ –≤—ã–∑—ã–≤–∞–µ–º –Ω–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π API
    const response = await fetch(`${req.headers.origin}/api/auth/telegram-new`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        initData: fakeInitData
      })
    });

    const result = await response.json();
    const status = response.status;

    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API:', {
      status,
      result
    });

    return res.status(200).json({
      test: 'MAIN_API_CALL',
      status_code: status,
      response_body: result,
      analysis: {
        api_reachable: status !== 404,
        telegram_token_ok: !result.error?.includes('TELEGRAM_BOT_TOKEN'),
        supabase_error: result.error?.includes('Supabase'),
        signature_error: result.error?.includes('Bad signature'),
        expected_signature_error: true // –° fake hash –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∏
      },
      interpretation: status === 401 && result.error === 'Bad signature' 
        ? '‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –æ–∂–∏–¥–∞–µ–º–∞ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏'
        : status === 500 && result.error?.includes('Supabase')
        ? '‚ùå –ü–†–û–ë–õ–ï–ú–ê: –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö'
        : '‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
      next_steps: status === 500 && result.error?.includes('Supabase')
        ? '–ü—Ä–æ–≤–µ—Ä—å /api/debug/supabase-test –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Supabase'
        : 'API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ'
    });

  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API:', error);
    return res.status(500).json({
      test: 'MAIN_API_CALL_FAILED',
      error: error.message,
      possible_causes: [
        'API endpoint –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
        '–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç',
        '–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é'
      ]
    });
  }
}